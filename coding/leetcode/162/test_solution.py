import pytest

from solution import Solution

@pytest.mark.parametrize(
    ('test_input', 'expected'),
    [
        (([0, 1, 0]), 1),
        (([1, 2, 3, 1]), 2),
        (([1, 2, 1, 3, 5, 6, 4]), 5),
        (([1, 2, 3, 4, 5, 6, 7]), 6),
        (([1, 2, 3, 4, 5, 6, 7, 8]), 7),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9]), 8),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), 9),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), 10),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), 11),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]), 12),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]), 13),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 14),
        (([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]), 15),
    ]
)
def testSolution(test_input, expected):
    s = Solution()
    assert s.findPeakElement(test_input) == expected
